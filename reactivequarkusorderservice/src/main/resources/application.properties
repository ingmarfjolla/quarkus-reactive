###############################################
###################GRPC########################
quarkus.grpc.clients.sku-service.host=localhost
quarkus.grpc.server.enable-reflection-service=true
###############################################

###############################################
##############DATABASES########################
quarkus.datasource.db-kind=postgresql
quarkus.hibernate-orm.database.generation=update
quarkus.hibernate-orm.log.sql=true
quarkus.datasource.jdbc=false
%dev.quarkus.log.console.json.pretty-print=true
%dev.quarkus.log.console.json=false
quarkus.log.level=INFO
quarkus.log.console.json=true
quarkus.log.console.json.date-format=yyyy-MM-dd'T'HH:mm:ss.SSSXXX
quarkus.log.console.json.print-details=true
quarkus.log.console.json.fields.mdc.enabled=true
quarkus.log.console.json.exception-output-type=detailed-and-formatted
#%dev.quarkus.log.console.format=%d %p [%C] %m %s %X %x %n
%dev.quarkus.log.console.format=%d %p [%C] (%t) %m %s %X %x %n

##debezium
#quarkus.debezium-outbox.remove-after-insert=false

##vault
quarkus.datasource.dynamicDS.username=quarkus
quarkus.datasource.dynamicDS.credentials-provider=dynamic-ds
quarkus.datasource.dynamicDS.credentials-provider-name=vault-credentials-provider
quarkus.vault.credentials-provider.dynamic-ds.credentials-role=mydbrole
quarkus.vault.credentials-provider.dynamic-ds.credentials-mount=database

quarkus.vault.devservices.init-commands="vault secrets enable database,"






#vault write database/config/mydb \
#    plugin_name=postgresql-database-plugin \
#    allowed_roles=mydbrole \
#    connection_url=postgresql://{{username}}:{{password}}@0.0.0.0:5433/quarkus?sslmode=disable \
#    username=quarkus \
#    password=quarkus , cat <<EOF > vault-postgres-creation.sql
#CREATE ROLE "{{name}}" WITH LOGIN PASSWORD '{{password}}' VALID UNTIL '{{expiration}}';
#GRANT SELECT, INSERT, UPDATE, DELETE ON ALL TABLES IN SCHEMA public TO "{{name}}";
#GRANT USAGE, SELECT ON ALL SEQUENCES IN SCHEMA public to "{{name}}";
#EOF , vault write database/roles/mydbrole \
#    db_name=mydb creation_statements=@vault-postgres-creation.sql \
#    default_ttl=1h \
#    max_ttl=24h \
#    revocation_statements="ALTER ROLE \"{{name}}\" NOLOGIN;" \
#    renew_statements="ALTER ROLE \"{{name}}\" VALID UNTIL '{{expiration}}';" , cat <<EOF | vault policy write vault-quickstart-policy -
#path "secret/data/myapps/vault-quickstart/*" {
#capabilities = ["read"]
#}
#path "database/creds/mydbrole" {
#capabilities = [ "read" ]
#}
#EOF"
